name: Validate Pull Request in Merge Sandbox
 
# Definition when the workflow should run
on:
  # The workflow will run whenever an event happens on a pull request
  pull_request:
    # The events are that a PR is opened, or when a commit is pushed
    # to a branch that has an existing pull request
    types: [opened, synchronize]
    # The branches filter allows to specify that this workflow should only
    # run if the branch name is "develop". This way we prevent this workflow
    # from running when PRs are opened on other branches
    branches: [ release ]
    # We only care about changes to the force-app directory, which is the
    # root directory of the sfdx project. This prevents the job from running
    # when changing non-salesforce files (like this yml file).
    paths:
      - 'force-app/**'

 
# Jobs to be executed
jobs:
    validate-pr-in-merge-sandbox:
        runs-on: ubuntu-latest
        if: ${{ github.actor != 'dependabot[bot]' }}
        steps:
 
            # Checkout the source code
            - name: 'Checkout source code'
              uses: actions/checkout@v3
              with:
                fetch-depth: 0
 
            # Install Salesforce CLI
            - name: 'Install Salesforce CLI'
              run:  npm install sfdx-cli -g
 
            # install SFDX-Git-Delta plugin - https://github.com/scolladon/sfdx-git-delta
            - name: 'Installing sfdx git delta'
              run: | 
                  echo y | sfdx plugins:install sfdx-git-delta
                  sfdx plugins
 
            #Create Delta Package
            - name: 'Create delta packages for new, modified or deleted metadata'
              run: | 
                  mkdir changed-sources
                  sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/
 
            #Store server.key file for JWT Auth
            - name: 'Get JWT Key and store in server.key'
              run: echo "${{ secrets.SALESFORCE_JWT_SECRET_KEY
 }}" > server.key
 
            # Authenticate to org
            - name: 'Authenticate to Production Org'
              run: sfdx force:auth:jwt:grant --clientid=${{ secrets.SALESFORCE_CONSUMER_KEY }} --jwtkeyfile=server.key --username=${{ secrets.SALESFORCE_DEVHUB_USERNAME }} --setdefaultdevhubusername
 
            - name: 'Validate Pull Request in Merge Sandbox'
              run: sfdx force:source:deploy -c -p force-app --testlevel RunLocalTests --json -u ${{ secrets.SALESFORCE_DEVHUB_USERNAME }}
